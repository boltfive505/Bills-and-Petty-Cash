<UserControl x:Class="Petty_Cash.Sub_Modals.pettyCashAddEdit_modal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Petty_Cash.Sub_Modals"
             xmlns:objs="clr-namespace:Petty_Cash.Objects"
             xmlns:xceed="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
             xmlns:customs="clr-namespace:bolt5.CustomControls;assembly=bolt5.CustomControls.Wpf"
             xmlns:converters="clr-namespace:Petty_Cash.Converters"
             mc:Ignorable="d" 
             Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <converters:MultiValueNumberOperationConverter x:Key="PettyCashBalance" Operation="Subtract"/>
        <Style x:Key="DisabledTextbox" TargetType="{x:Type TextBox}">
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="MinHeight" Value="21"/>
        </Style>
        <Style x:Key="DisabledDecimalUpDown" TargetType="{x:Type xceed:DecimalUpDown}">
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="ShowButtonSpinner" Value="False"/>
            <Setter Property="MinHeight" Value="21"/>
        </Style>
        <Style x:Key="CompanyInfo" TargetType="{x:Type TextBox}">
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="MinHeight" Value="21"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=TinNumberValue, Path=SelectedItem}" Value="{x:Null}">
                    <Setter Property="IsReadOnly" Value="False"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="IsTabStop" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0" Orientation="Vertical" Margin="{StaticResource SubModal.Group.Margin}">
            <StackPanel Orientation="Horizontal" Margin="{StaticResource SubModal.Verticals.Margin}">
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="Payee"/>
                    <TextBox x:Name="PayeeValue" Text="{Binding Payee.PayeeName,Mode=OneWay}" Width="200" Style="{StaticResource DisabledTextbox}"/>
                    <!--<ComboBox x:Name="PayeeValue" Width="200" IsReadOnly="True" IsHitTestVisible="True" SelectionChanged="PayeeValue_SelectionChanged" SelectedItem="{Binding Payee,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <Run Text="{Binding PayeeName}"/>
                                    <Run Text="{Binding Amount, Converter={StaticResource DisplayNoCurrency}}" Foreground="Red" FontWeight="Bold"/>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>-->
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="Voucher"/>
                    <TextBox Text="{Binding Voucher.VoucherNumber,Mode=OneWay}" Width="120" Style="{StaticResource DisabledTextbox}"/>
                    <!--<ComboBox x:Name="VoucherValue" Width="120" IsReadOnly="True" IsHitTestVisible="False"
                              SelectionChanged="VoucherValue_SelectionChanged"
                              SelectedItem="{Binding Voucher,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type objs:VoucherViewModel}">
                                <TextBlock>
                                    <Run Text="{Binding VoucherNumber,Mode=OneWay}"/>
                                    <Run>-</Run>
                                    <Run Text="{Binding AmountReceived,Converter={StaticResource DisplayNoCurrency}}" FontWeight="Bold" Foreground="Red"/>
                                    <Run>-</Run>
                                    <Run Text="{Binding Particulars}" Foreground="Gray"/>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>-->
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="Remaining"/>
                    <xceed:DecimalUpDown x:Name="VoucherAmountValue" Value="{Binding Voucher.BalanceAmount, Mode=OneWay}" 
                             TextAlignment="Right" FormatString="N2" Width="80" Style="{StaticResource DisabledDecimalUpDown}"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="Balance"/>
                    <xceed:DecimalUpDown x:Name="BalanceValue"
                                         Value="{Binding RemainingBalance, Mode=OneWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnExceptions=True,ValidatesOnDataErrors=True}"
                                         FormatString="N2" Width="80">
                        <xceed:DecimalUpDown.Style>
                            <Style TargetType="{x:Type xceed:DecimalUpDown}" BasedOn="{StaticResource DisabledDecimalUpDown}">
                                <Style.Triggers>
                                    <Trigger Property="Validation.HasError" Value="True">
                                        <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </xceed:DecimalUpDown.Style>
                    </xceed:DecimalUpDown>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="{StaticResource SubModal.Verticals.Margin}">
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="Particulars"/>
                    <TextBox Text="{Binding Path=SelectedItem.Particulars, ElementName=VoucherValue}"
                             Width="525" Height="45" Style="{StaticResource DisabledTextbox}"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="{StaticResource SubModal.Verticals.Margin}">
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="Tin Number"/>
                    <StackPanel Orientation="Horizontal">
                        <ComboBox x:Name="TinNumberValue" Width="120" SelectedItem="{Binding Company,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnExceptions=True,ValidatesOnDataErrors=True}"
                                  IsEditable="True" IsTextSearchCaseSensitive="False" IsTextSearchEnabled="True" TextSearch.TextPath="TinNumber" TextBoxBase.TextChanged="TinNumberValue_TextChanged" SelectionChanged="TinNumberValue_SelectionChanged">
                            <ComboBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type objs:CompanyViewModel}">
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock>
                                            <Run Text="{Binding TinNumber, Converter={StaticResource TinNumberDisplayConverter}}"/>
                                            <Run Text="{Binding CompanyName, StringFormat={}- {0}}" Foreground="Gray"/>
                                        </TextBlock>
                                        <TextBlock Text="{Binding Address}" Foreground="Gray" FontStyle="Italic"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="Company"/>
                    <TextBox x:Name="CompanyValue" Width="150">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource CompanyInfo}"/>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="Address"/>
                    <TextBox x:Name="AddressValue" Width="200">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource CompanyInfo}"/>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="{StaticResource SubModal.Verticals.Margin}">
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="Remaining"/>
                    <xceed:DecimalUpDown Value="{Binding Path=SelectedItem.BalanceAmount, ElementName=VoucherValue, Mode=OneWay}" 
                             TextAlignment="Right" FormatString="N2" Width="80" Foreground="Red" Style="{StaticResource DisabledDecimalUpDown}"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="Amount"/>
                    <xceed:DecimalUpDown x:Name="AmountValue" Value="{Binding AmountOut,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                         ShowButtonSpinner="False" FormatString="N2" Width="100"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="VAT"/>
                    <CheckBox x:Name="IsVatValue" IsChecked="{Binding IsVat, UpdateSourceTrigger=PropertyChanged}"
                              Style="{StaticResource BigCheckBox}" Height="20"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="VAT (12%)"/>
                    <xceed:DecimalUpDown Value="{Binding VatAmount, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{StaticResource DisabledDecimalUpDown}" Width="70"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="Net of VAT"/>
                    <xceed:DecimalUpDown Value="{Binding NetVatAmount, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{StaticResource DisabledDecimalUpDown}" Width="70"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="Non-VAT"/>
                    <xceed:DecimalUpDown Value="{Binding NonVatAmount, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{StaticResource DisabledDecimalUpDown}" Width="70"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="{StaticResource SubModal.Verticals.Margin}">
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="Category"/>
                    <StackPanel Orientation="Horizontal">
                        <ComboBox x:Name="CategoryValue" Width="150" DisplayMemberPath="CategoryName"
                                  IsEditable="True" IsTextSearchCaseSensitive="False" IsTextSearchEnabled="True" TextSearch.TextPath="CategoryName"
                                  SelectedItem="{Binding Category,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="Date"/>
                    <xceed:DateTimePicker x:Name="DateValue" Value="{Binding TransactionDate, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                          ShowButtonSpinner="False" TimePickerVisibility="Collapsed" Format="ShortDate" Width="100"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="{StaticResource SubModal.Verticals.Margin}">
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="Purpose ( Particulars )"/>
                    <TextBox x:Name="PurposeValue" Text="{Binding Purpose, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                             Width="500" Height="45"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="{StaticResource SubModal.Verticals.Margin}">
                <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                    <TextBlock Text="Payment File"/>
                    <StackPanel Orientation="Horizontal">
                        <customs:FileAttachment x:Name="PaymentFileValue" FileName="{Binding PaymentFile, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                            Width="350" Filter="Supported Files|*.pdf;*.png;*.jpg;*.jpeg"/>
                        <Button Content="Open Camera" Click="OpenCamera_btn_Click" Margin="5,0,0,0"/>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
            <Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                        <Button Content="ADD MORE EXPENSE DETAILS" Background="LightBlue" Padding="8,4,8,4" FontWeight="Bold" Click="SaveAndKeep_btn_Click"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <StackPanel Orientation="Vertical" Margin="{StaticResource SubModal.Fields.Margin}">
                        <Button Content="CANCEL VOUCHER" Background="Salmon" FontWeight="Bold" Padding="8,4,8,4" Click="Cancel_btn_Click"/>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </StackPanel>
        <!-- voucher history -->
        <GroupBox Grid.Column="1" Header="Voucher Details">
            <DataGrid x:Name="historyDg">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="#" Binding="{Binding Voucher.VoucherNumber}" Width="50"
                                        HeaderStyle="{StaticResource DataGridColumnHeader.Right}"
                                        ElementStyle="{StaticResource DataGridTextColumn.ElementStyle.Right}"/>
                    <DataGridTextColumn Header="Date" Binding="{Binding TransactionDate, StringFormat=d}" Width="80"
                                        HeaderStyle="{StaticResource DataGridColumnHeader.Right}"
                                        ElementStyle="{StaticResource DataGridTextColumn.ElementStyle.Right}"/>
                    <DataGridTextColumn Header="Category" Binding="{Binding Category.CategoryName}" Width="100"
                                        ElementStyle="{StaticResource DataGridTextColumn.ElementStyle.Left}"/>
                    <DataGridTextColumn Header="Amount" Binding="{Binding AmountOut, Converter={StaticResource CurrencyDisplayConverter}}" Width="80"
                                        HeaderStyle="{StaticResource DataGridColumnHeader.Right}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridTextColumn.ElementStyle.Right}">
                                <Setter Property="Foreground" Value="DarkRed"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
    </Grid>
</UserControl>
